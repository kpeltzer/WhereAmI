argv = ['/usr/bin/node-waf', 'configure']
blddir = '/media/sf_projects/WhereAmI/node_modules/node-foursquare-2/node_modules/log4js/node_modules/compress-buffer/build'
commands = {'dist': 0, 'configure': True, 'distcheck': 0, 'install': 0, 'build': 0, 'clean': 0, 'distclean': 0, 'check': 0, 'uninstall': 0}
cwd = '/media/sf_projects/WhereAmI/node_modules/node-foursquare-2/node_modules/log4js/node_modules/compress-buffer'
environ = {'npm_config_color': 'true', 'npm_config_engine_strict': '', 'npm_config_searchopts': '', 'npm_config_fetch_retry_factor': '10', 'npm_config_group': '1000', 'npm_package_homepage': 'http://egorfine.github.com/node-compress-buffer', 'npm_config_browser': 'google-chrome', 'npm_config_global': '', 'SHELL': '/bin/bash', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/', 'MANDATORY_PATH': '/usr/share/gconf/ubuntu.mandatory.path', 'npm_config_user_agent': 'node/v0.8.7', 'npm_config_pre': '', 'npm_config_cache': '/home/kpeltzer/.npm', 'MFLAGS': '', 'npm_config_tmp': '/home/kpeltzer/tmp', 'npm_config_argv': '{"remain":[],"cooked":["install"],"original":["install"]}', 'npm_config_cache_lock_wait': '10000', 'npm_config_save_bundle': '', 'npm_config_save_dev': '', 'npm_config_init_version': '0.0.0', 'DBUS_SESSION_BUS_ADDRESS': 'unix:abstract=/tmp/dbus-6OMt8NLCGa,guid=92b6c8554870201732b744f4000001d6', 'npm_lifecycle_event': 'install', 'DESKTOP_SESSION': 'ubuntu', 'npm_config_init_author_name': '', 'npm_config_yes': '', 'npm_config_usage': '', 'npm_package_description': 'Single-step Buffer compression library for Node.js', 'npm_config_shell': '/bin/bash', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:', 'npm_config_ignore': '', 'npm_config_ca': '"-----BEGIN CERTIFICATE-----\\nMIIChzCCAfACCQDauvz/KHp8ejANBgkqhkiG9w0BAQUFADCBhzELMAkGA1UEBhMC\\nVVMxCzAJBgNVBAgTAkNBMRAwDgYDVQQHEwdPYWtsYW5kMQwwCgYDVQQKEwNucG0x\\nIjAgBgNVBAsTGW5wbSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxDjAMBgNVBAMTBW5w\\nbUNBMRcwFQYJKoZIhvcNAQkBFghpQGl6cy5tZTAeFw0xMTA5MDUwMTQ3MTdaFw0y\\nMTA5MDIwMTQ3MTdaMIGHMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExEDAOBgNV\\nBAcTB09ha2xhbmQxDDAKBgNVBAoTA25wbTEiMCAGA1UECxMZbnBtIENlcnRpZmlj\\nYXRlIEF1dGhvcml0eTEOMAwGA1UEAxMFbnBtQ0ExFzAVBgkqhkiG9w0BCQEWCGlA\\naXpzLm1lMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDLI4tIqPpRW+ACw9GE\\nOgBlJZwK5f8nnKCLK629Pv5yJpQKs3DENExAyOgDcyaF0HD0zk8zTp+ZsLaNdKOz\\nGn2U181KGprGKAXP6DU6ByOJDWmTlY6+Ad1laYT0m64fERSpHw/hjD3D+iX4aMOl\\ny0HdbT5m1ZGh6SJz3ZqxavhHLQIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAC4ySDbC\\nl7W1WpLmtLGEQ/yuMLUf6Jy/vr+CRp4h+UzL+IQpCv8FfxsYE7dhf/bmWTEupBkv\\nyNL18lipt2jSvR3v6oAHAReotvdjqhxddpe5Holns6EQd1/xEZ7sB1YhQKJtvUrl\\nZNufy1Jf1r0ldEGeA+0ISck7s+xSh9rQD2Op\\n-----END CERTIFICATE-----\\n"', 'npm_config_globalconfig': '/usr/etc/npmrc', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'npm_config_parseable': '', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'npm_config_userignorefile': '/home/kpeltzer/.npmignore', 'USER': 'kpeltzer', 'npm_package_author_name': 'Egor Egorov', 'npm_config_versions': '', 'XAUTHORITY': '/home/kpeltzer/.Xauthority', 'SESSION_MANAGER': 'local/kpeltzer-VirtualBox:@/tmp/.ICE-unix/2177,unix/kpeltzer-VirtualBox:/tmp/.ICE-unix/2177', 'SHLVL': '1', 'npm_config_cache_lock_stale': '60000', 'npm_config_init_author_url': '', 'npm_config_fetch_retry_maxtimeout': '60000', 'npm_config_cache_max': 'null', 'COMPIZ_CONFIG_PROFILE': 'ubuntu', 'WINDOWID': '54525958', 'GPG_AGENT_INFO': '/tmp/keyring-YLM0mg/gpg:0:1', 'npm_config_proxy': '', 'npm_config_depth': 'null', 'npm_config_umask': '18', 'GDMSESSION': 'ubuntu', 'npm_config_long': '', 'npm_config_editor': 'vi', 'XDG_SEAT_PATH': '/org/freedesktop/DisplayManager/Seat0', 'npm_config_prefix': '/usr', 'npm_package_repository_type': 'git', 'npm_config_npat': '', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'npm_config_init_module': '/home/kpeltzer/.npm-init.js', 'UBUNTU_MENUPROXY': 'libappmenu.so', 'npm_config_json': '', 'npm_config_searchsort': 'name', 'npm_lifecycle_script': 'make build', 'COLORTERM': 'gnome-terminal', 'npm_config_git': 'git', 'npm_package_readme': '"# node-compress-buffer \\n\\nA single-step Buffer compression library for Node.js.\\n\\n## Synopsis\\n\\n```javascript\\n\\tcompress = require(\'compress-buffer\').compress;\\n\\tuncompress = require(\'compress-buffer\').uncompress;\\n\\t\\n\\tvar rawData = fs.readFileSync(\\"/etc/passwd\\");\\n\\n\\tvar compressed   = compress(rawData);\\n\\tvar uncompressed = uncompress(compressed);\\n\\n\\tuncompressed == rawData // true!\\n```\\n\\n## Why? \\n\\nFor the sake of the KISS principle. Most of the time you don\'t need a streaming compression, you need to compress an existing and already complete data. \\n\\n## Options \\n\\n<code>compress()</code> takes two arguments: the data (must be a <code>Buffer()</code>) and optional compression level which must be within 1..9. It returns compressed <code>Buffer()</code> or <code>undefined</code> on error.\\n\\n<code>uncompress()</code> takes a single argument: the data (must be a <code>Buffer()</code>) and returns uncompressed <code>Buffer()</code> or <code>undefined</code> on error.\\n\\n## Installation\\n\\n\\tnpm install compress-buffer\\n\\nor\\n\\n\\tnpm install .\\n\\n## Upgrade notice\\n\\nIn version 0.4.1 I removed support for strings compression. It is not possible to correctly determine the encoding of an input string and different encoding yields different results. So for the sake of consistency and reliability this was removed. \\n\\nUse the following instead: \\n\\n```javascript\\n\\tvar compressedBuffer = compress(new Buffer(\\"my string\\"));\\n```\\n\\n## License\\n\\nSee LICENSE file. Basically, it\'s a kind of \\"do-whatever-you-want-for-free\\" license.\\n\\n\\n## Thanks to \\n\\n* A lot of thanks for important suggestions goes to Konstantin K\xc3\xa4fer who implemented a nice similar module node-zlib (https://github.com/kkaefer/node-zlib) earlier than me.\\n* Oleg Kertanov.\\n\\n\\n## Author\\n\\nEgor Egorov <me@egorfine.com>\\n\\n"', 'npm_config_rollback': 'true', 'npm_package_repository_url': 'http://github.com/egorfine/node-compress-buffer.git', 'HOME': '/home/kpeltzer', 'DISPLAY': ':0', 'npm_config_save_optional': '', 'LANG': 'en_US.UTF-8', 'npm_config_save': '', 'npm_config_registry': 'https://registry.npmjs.org/', 'npm_config_unicode': 'true', 'npm_config_production': '', 'npm_config_message': '%s', 'npm_config_always_auth': '', '_': '/usr/bin/npm', 'npm_package_devDependencies_nodeunit': '>=0.5.4', 'npm_config_searchexclude': '', 'npm_config_loglevel': 'http', 'npm_config_cache_lock_retries': '10', 'npm_config_strict_ssl': 'true', 'npm_package_main': './index', 'npm_config_tag': 'latest', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'DEFAULTS_PATH': '/usr/share/gconf/ubuntu.default.path', 'npm_config_globalignorefile': '/usr/etc/npmignore', 'MAKELEVEL': '1', 'npm_config_npaturl': 'http://npat.npmjs.org/', 'npm_package_bugs_url': 'http://github.com/egorFiNE/node-compress-buffer/issues', 'npm_config_force': '', 'LOGNAME': 'kpeltzer', 'npm_config_user': '', 'npm_config_link': '', 'npm_package_name': 'compress-buffer', 'npm_config_userconfig': '/home/kpeltzer/.npmrc', 'npm_package_scripts_install': 'make build', 'XDG_CURRENT_DESKTOP': 'Unity', 'npm_config_dev': '', 'npm_config_rebuild_bundle': 'true', 'npm_config_version': '', 'npm_config_username': '', 'GNOME_KEYRING_CONTROL': '/tmp/keyring-YLM0mg', 'PATH': '/usr/bin:/usr/lib/nodejs/npm/bin/node-gyp-bin:/media/sf_projects/WhereAmI/node_modules/node-foursquare-2/node_modules/log4js/node_modules/compress-buffer/node_modules/.bin:/media/sf_projects/WhereAmI/node_modules/node-foursquare-2/node_modules/log4js/node_modules/.bin:/media/sf_projects/WhereAmI/node_modules/node-foursquare-2/node_modules/.bin:/media/sf_projects/WhereAmI/node_modules/.bin:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games', 'npm_config_coverage': '', 'SSH_AGENT_PID': '2243', 'npm_config_proprietary_attribs': 'true', 'XDG_SESSION_PATH': '/org/freedesktop/DisplayManager/Session0', 'XDG_SESSION_COOKIE': '8bf26868ff8e16cb889adfa400000006-1345605292.605231-1778733794', 'npm_config_onload_script': '', 'npm_config_description': 'true', 'npm_config_sign_git_tag': '', 'MAKEFLAGS': '', 'npm_config_fetch_retry_mintimeout': '10000', 'npm_config_viewer': 'man', 'npm_config_fetch_retries': '2', 'npm_config_unsafe_perm': 'true', 'SSH_AUTH_SOCK': '/tmp/keyring-YLM0mg/ssh', 'TERM': 'xterm', 'npm_package_version': '0.5.1', 'npm_config_https_proxy': '', 'npm_package_engine_0': 'node >=0.4.0', 'npm_config_node_version': 'v0.8.7', 'npm_config_init_author_email': '', 'OLDPWD': '/media/sf_projects', 'NODE_PATH': '/usr/lib/nodejs:/usr/share/javascript', 'PWD': '/media/sf_projects/WhereAmI/node_modules/node-foursquare-2/node_modules/log4js/node_modules/compress-buffer', 'npm_config_cache_min': ''}
files = []
hash = 0
options = {'compile_targets': None, 'force': False, 'verbose': 0, 'nocache': False, 'progress_bar': 0, 'check_cxx_compiler': 'g++ icpc sunc++', 'destdir': '', 'keep': False, 'zones': '', 'blddir': '', 'prefix': '/usr/local/', 'debug': False, 'srcdir': '', 'jobs': 1}
srcdir = '/media/sf_projects/WhereAmI/node_modules/node-foursquare-2/node_modules/log4js/node_modules/compress-buffer'
